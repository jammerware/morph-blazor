@inherits LayoutComponentBase
@using MorphShared.Components

@inject IApiService ApiService
@inject ShakeService ShakeService
@inject NavigationManager NavManager

<MudThemeProvider />

<MudLayout>
    <MudDrawer @bind-Open="@DrawerOpen" Elevation="1" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Class="drawer-logo">Morph</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="/">Search</MudNavLink>
            <MudNavLink Href="/settings">Settings</MudNavLink>
            <MudNavLink Href="/about">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <div class="drawer-button">
        <MudIconButton OnClick="ToggleDrawer"
            Icon="@(DrawerOpen ? Icons.Material.Filled.MenuOpen : Icons.Material.Filled.Menu)" />
    </div>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            <MorphAppTitle Version="@AppVersion" IsAlpha="true" AboutUrl="/about" />
            <div class="app-wrap">
                @Body
            </div>
            <MorphAppFooter />
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private string AppVersion { get; set; } = AppInfo.VersionString;
    private bool DrawerOpen { get; set; } = false;

    private void ToggleDrawer()
    {
        DrawerOpen = !DrawerOpen;
    }

    protected override void OnInitialized()
    {
        this.ShakeService.ShakeDetected += async (sender, args) =>
        {
            var randomTerm = await ApiService.GetRandomRecommendedSearchTerm();
            NavManager.NavigateTo($"/word/{randomTerm.Term}");
        };
    }
}